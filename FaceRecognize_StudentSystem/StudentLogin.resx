<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>